name: Docker

on:
  push:
    # Agora escutamos push em qualquer branch (*)
    # e também em tags que começam com "v" (por ex. "v1.2.3")
    branches:
      - "*"
    tags:
      - v*

env:
  IMAGE_NAME: ${{ vars.PROJECT_NAME }}
  PORT: 5000

jobs:
  # 1) Job de testes (só roda se for na branch main)
  test:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # 2) Job de push da imagem Docker (só roda se for na branch main)
  push:
    if: github.ref_name == 'main'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
       
      - name: Deploy docker image
        uses: chaplyk/docker-compose-remote-action@v1.1
        with:
          ssh_host: ${{ secrets.SSH_HOST }}
          ssh_user: ${{ secrets.SSH_USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          compose_file: docker-compose.yml
          pull: true
          build: true

  # 3) Job para criar o Pull Request (só roda se NÃO for na branch main)
  create_pull_request:
    if: github.ref_name != 'main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Criar Pull Request para main
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          # 'head' será a branch em que acabou de ocorrer o push
          head: ${{ github.ref_name }}
          title: "PR automático a partir da branch ${{ github.ref_name }}"
          body: >
            Este Pull Request foi criado automaticamente a partir 
            da branch ${{ github.ref_name }}.